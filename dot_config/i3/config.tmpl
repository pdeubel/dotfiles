# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# > Modifier Key <
set $mod Mod4

# -------------------------------------------------------------

# > Borders

default_border pixel 1
default_floating_border normal
hide_edge_borders none

# Needed for i3-gaps
for_window [class=".*"] border pixel 0

# > i3-gaps

gaps inner 2
gaps outer 0

# > Compositor

exec --no-startup-id picom -b --backend glx

exec --no-startup-id dunst

# > Network

# Required to connect NetworkManager to Gnome Keyring, now you can save for example
# VPN passwords in the keyring
exec --no-startup-id nm-applet

# -------------------------------------------------------------

# > Font <
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango:Hack 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# > To be deleted <
# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
# exec --no-startup-id nm-applet

# > Floating modifier <
# >> Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# > Terminal <
bindsym $mod+Return exec alacritty

# > Kill window key <
bindsym $mod+Shift+q kill

# > To be deleted or not, currently using krunner

# Start Rofi
bindsym $mod+d exec rofi -show run

exec --no-startup-id greenclip daemon > /tmp/greenclip.log 2>&1
bindsym $mod+c exec rofi -show clipboard -run-command '{cmd}'

# > Focus change <
# >> home row <<
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+odiaeresis focus right

# >> cursor keys <<
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# > Move focused window <
# >> home row <<
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+odiaeresis move right

# >> cursor keys <<
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# > Splitting windows <
# >> Horizontal <<
bindsym $mod+h split h

# >> Vertical <<
bindsym $mod+v split v

# > Fullscreen <
bindsym $mod+f fullscreen toggle

# > Container layouts <
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# -------------------------------------------------------------

# > Naming and moving of workspaces <

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace number $ws1
bindsym $mod+Ctrl+2 move container to workspace number $ws2
bindsym $mod+Ctrl+3 move container to workspace number $ws3
bindsym $mod+Ctrl+4 move container to workspace number $ws4
bindsym $mod+Ctrl+5 move container to workspace number $ws5
bindsym $mod+Ctrl+6 move container to workspace number $ws6
bindsym $mod+Ctrl+7 move container to workspace number $ws7
bindsym $mod+Ctrl+8 move container to workspace number $ws8

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10; workspace $ws0

# -------------------------------------------------------------

# > Automatic startup <

exec --no-startup-id /home/pdeubel/Scripts/daily-bing-image-wallpaper.sh
exec --no-startup-id nextcloud
exec --no-startup-id firefox
exec --no-startup-id /usr/lib/kdeconnectd
exec --no-startup-id kdeconnect-indicator

# -------------------------------------------------------------

# > Automatic switching to workspaces <

assign [class="^firefox$"] $ws2
assign [class="^jetbrains-toolbox$"] $ws3
assign [class="^jetbrains-pycharm$"] $ws3
assign [class="^jetbrains-pycharm-ce$"] $ws3
assign [class="^jetbrains-idea$"] $ws3
assign [class="^jetbrains-studio$"] $ws3
assign [class="^QtCreator$"] $ws3
assign [class="^Slack$"] $ws4
for_window [class="Spotify"] move to workspace $ws5

# > Automatic putting workspaces to displays <

# Switch IDE workspace to large display

workspace $ws1 output eDP-1
workspace $ws2 output eDP-1
workspace $ws3 output DP-1
workspace $ws4 output eDP-1
workspace $ws5 output eDP-1

# > Reloading <

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# > Locking <

bindsym $mod+Control+l exec i3lock-fancy-rapid 10 3 

# In theory: Dim screen after 5 minutes (300s), lock it after another 5 min
exec --no-startup-id xset s 300 300
# Power-off display after 15 min (900) (the other two 900 values don't do anything on newer displays apparently); dpms times are independent of the screen saver times
exec --no-startup-id xset dpms 900 900 900
exec --no-startup-id xss-lock -n $HOME/Scripts/dim-screen.sh -- betterlockscreen -l

# -------------------------------------------------------------

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym odiaeresis resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Starts Polybar, which handles the tray and status bar. Specific
# configuration of fonts, images, etc. is done through Polybar's config
exec_always --no-startup-id $HOME/.config/polybar/launch.sh


# >>> Plasma integration <<<

# Recommendations from KDE UserBase Wiki

for_window [title="Desktop — Plasma"] kill; floating enable; border none
for_window [class="plasmashell"] floating enable;
for_window [class="Plasma"] floating enable; border none
for_window [title="plasma-desktop"] floating enable; border none
for_window [title="win7"] floating enable; border none
for_window [class="krunner"] floating enable; border none
for_window [class="Kmix"] floating enable; border none
for_window [class="Klipper"] floating enable; border none
for_window [class="Plasmoidviewer"] floating enable; border none
for_window [class="(?i)nextcloud"] floating disable
for_window [class="plasmashell" window_type="notification"] floating enable, border none, move right 700px, move down 450px, no_focus

# > Colors

# class                 border  backgr. text    indicator child_border
client.focused          #1abc9c #1abc9c #ffffff #2e9ef4   #285577
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff

# > Fn Keys

# Disable repeat for certain function keys as this hopefully fixes the triggering
# of the scripts twice
## WLAN key
exec --no-startup-id xset -r 246

bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioLowerVolume exec  --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec --no-startup-id light -U 5
bindsym XF86MonBrightnessUp exec --no-startup-id light -A 5

# For some reason pressing the fn+wlan key enables and disables wifi. Seems like another program is doing
# this, but I do not know which one. For now I comment this out
# bindsym XF86WLAN exec --no-startup-id $HOME/Scripts/toggle-wifi.sh

# Keyboard Layout
exec --no-startup-id setxkbmap "de,es"

# Screenshot

bindsym Print exec spectacle

for_window [class="jadx-gui-JadxGUI"] floating enable

# Garmin IQ SDK device virtualization
for_window [class="Simulator"] floating enable
for_window [title="test-gui-worldmodels"] floating enable
